[
  {
    "codes": "        ",
    "blocks": []
  },
  {
    "codes": "    public void insertionSort( int[ ] a ) ",
    "blocks": []
  },
  {
    "codes": "    { ",
    "blocks": []
  },
  {
    "codes": "        int j; ",
    "blocks": []
  },
  {
    "codes": " ",
    "blocks": []
  },
  {
    "codes": "        for( int p = 1; p < a.length; p++ ) ",
    "blocks": [
      0,
      1,
      2,
      9,
      10
    ]
  },
  {
    "codes": "        { ",
    "blocks": [
      9,
      10
    ]
  },
  {
    "codes": "             int tmp = a[ p ]; ",
    "blocks": [
      3,
      9,
      10
    ]
  },
  {
    "codes": "            for( j = p; j > 0 && tmp<a[ j - 1 ]; j-- ) ",
    "blocks": [
      3,
      4,
      5,
      6,
      7,
      8,
      9,
      10
    ]
  },
  {
    "codes": "                 a[ j ] = a[ j - 1 ]; ",
    "blocks": [
      8,
      9,
      10
    ]
  },
  {
    "codes": "            a[ j ] = tmp; ",
    "blocks": [
      9,
      10
    ]
  },
  {
    "codes": "        } ",
    "blocks": [
      9,
      10
    ]
  },
  {
    "codes": "    } ",
    "blocks": []
  },
  {
    "codes": " ",
    "blocks": []
  },
  {
    "codes": "    private  boolean isSorted(int[] a) { ",
    "blocks": []
  },
  {
    "codes": "        for(int i=0; i<a.length-1; i++) { ",
    "blocks": []
  },
  {
    "codes": "            if(a[i]>a[i+1]) { ",
    "blocks": []
  }
]